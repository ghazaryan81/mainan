@function max($numbers...) {
 @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
 @return m#{i}n(#{$numbers});
}

@mixin supports-safe-area-insets {
 // stylelint-disable-next-line
 @supports (padding: max(0px)) {
  @content;
 }
}

@mixin hover {
 .has-hover &:not([disabled]):hover {
  @content;
 }
}

@mixin active-hover {
 .has-hover &.is-active:hover {
  @content;
 }
}

@mixin active {
 &.is-active {
  @content;
 }
}

@mixin disabled {
 &.is-disabled,
 &:disabled {
  @content;
 }
}

@mixin text-border($color, $border, $ieColor, $width: 1px, $ieWidth: 1px) {
 // stylelint-disable-next-line
 text-shadow: ($ieWidth) ($ieWidth) $border, 0 0 $border,
  $width ($ieWidth) $border, 0 $width $border;
 color: $ieColor;

 @supports (-webkit-text-stroke: $width $border) {
  text-shadow: none;
  // stylelint-disable-next-line
  -webkit-text-stroke: $width $border;
  color: $color;
 }
}

@mixin font-face($url, $font-family, $font-weight, $font-style) {
 @font-face {
  src: url($url + ".woff2") format("woff2"), url($url + ".woff") format("woff");
  font-family: $font-family;
  font-weight: $font-weight;
  font-style: $font-style;
  font-display: swap;
 }
}

@mixin retina {
 // stylelint-disable-next-line media-feature-name-no-vendor-prefix
 @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  @content;
 }
}

/* stylelint-disable */
@mixin placeholder {
 &::-webkit-input-placeholder {
  // WebKit, Blink, Edge
  @content;
 }

 &::-moz-placeholder {
  // Firefox 19+
  @content;
 }

 &:-ms-input-placeholder {
  // Internet Explorer 10-11
  @content;
 }
}
/* stylelint-enable */

// -------------------
// Additionally
// -------------------

@mixin flex-center {
 display: flex;
 justify-content: center;
 align-items: center;
} // @mixin flex-center

@mixin flex-center-vert {
 display: flex;
 align-items: center;
} // @mixin flex-center-vert

@mixin flex-center-horiz {
 display: flex;
 justify-content: center;
} // @mixin flex-center-horiz

@mixin flex-column {
 display: flex;
 flex-direction: column;
} // @mixin flex-column

@mixin flex-center-column {
 flex-direction: column;

 @include flex-center;
} // @mixin flex-center-column

@mixin line-height-crop($line-height) {
 &::before {
  content: "";
  display: block;
  @include size(0);
  margin-top: calc((1 - #{$line-height}) * 0.5em);
 }
}

@mixin margin-x($left, $right: $left) {
 margin: {
  left: $left;
  right: $right;
 }
}

@mixin margin-y($top, $bottom: $top) {
 margin: {
  top: $top;
  bottom: $bottom;
 }
}

@mixin push--auto {
 margin: {
  left: auto;
  right: auto;
 }
}

@mixin overflow($x, $y: $x) {
 overflow-x: $x;
 overflow-y: $y;
}

@mixin padding-x($left, $right: $left) {
 padding: {
  left: $left;
  right: $right;
 }
}

@mixin padding-y($top, $bottom: $top) {
 padding: {
  top: $top;
  bottom: $bottom;
 }
}

@mixin start-placeholder-animate-to-right($ms) {
 text-indent: 0;
 opacity: 1;
 @include transition(text-indent, opacity);
}

@mixin end-placeholder-animate-to-right($delta) {
 text-indent: $delta;
 opacity: 0;
}

@mixin placeholder-animate-to-right($delta: 20px, $ms: 0.25s) {
 &::-webkit-input-placeholder {
  @include start-placeholder-animate-to-right($ms);
 }
 &::-moz-placeholder {
  @include start-placeholder-animate-to-right($ms);
 }
 &:-moz-placeholder {
  @include start-placeholder-animate-to-right($ms);
 }
 &:-ms-input-placeholder {
  @include start-placeholder-animate-to-right($ms);
 }
 &:focus::-webkit-input-placeholder {
  @include end-placeholder-animate-to-right($delta);
 }
 &:focus::-moz-placeholder {
  @include end-placeholder-animate-to-right($delta);
 }
 &:focus:-moz-placeholder {
  @include end-placeholder-animate-to-right($delta);
 }
 &:focus:-ms-input-placeholder {
  @include end-placeholder-animate-to-right($delta);
 }
}

@mixin p($position: rel, $top: 0, $left: 0) {
 @if $position == rel {
  position: relative;
 } @else if $position == abs {
  position: absolute;
 }
 top: $top;
 left: $left;
} // @mixin p($position, $top: 0, $left: 0)

@mixin ptr($top: 0, $right: 0) {
 position: absolute;
 top: $top;
 right: $right;
} // @mixin ptr($position, $top: 0, $right: $top)

@mixin pbl($bottom: 0, $left: 0) {
 position: absolute;
 left: $left;
 bottom: $bottom;
} // @mixin pbl($position, $bottom: 0, $left: $bottom)

@mixin pbr($bottom: 0, $right: 0) {
 position: absolute;
 right: $right;
 bottom: $bottom;
} // @mixin pbr($position, $bottom: 0, $right: $bottom)

@mixin pbl($bottom: 0, $left: 0) {
 position: absolute;
 left: $left;
 bottom: $bottom;
} // @mixin pbr($position, $bottom: 0, $right: $bottom)

@function px-to-vw($px) {
 @return (100 * strip-unit($px) / 1920) * 1vw;
}

@function get-vw($max-breakpoint, $target) {
 $vw-context: ($max-breakpoint * 0.01) * 1px;
 @return ($target/$vw-context) * 1vw;
}

@mixin vw($max-breakpoint, $size) {
 font-size: get-vw($size);
 @media (min-width: #{$max-breakpoint}px) {
  font-size: $size;
 }
}

@mixin scroll(
 $scroll-width: 6px,
 $scroll-thumb-background-color: grey,
 $scroll-track-background-color: white
) {
 &::-webkit-scrollbar {
  width: $scroll-width;
 }
 &::-webkit-scrollbar-thumb {
  background-color: $scroll-thumb-background-color;
 }
 &::-webkit-scrollbar-track {
  background-color: $scroll-track-background-color;
 }
}

@mixin size($width, $height: $width) {
 width: $width;
 height: $height;
}

@mixin sizeMh($width, $height: $width) {
 width: $width;
 min-height: $height;
}

@mixin transition($properties...) {
 transition-property: $properties;
 transition-duration: 0.16s;
 transition-timing-function: linear;
 will-change: $properties;
}

@mixin truncate-txt($truncation-boundary: 100%) {
 overflow: hidden;
 max-width: $truncation-boundary;
 white-space: nowrap;
 text-overflow: ellipsis;
}
